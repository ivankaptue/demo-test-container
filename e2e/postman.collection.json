{
  "info": {
    "_postman_id": "48e32363-16de-4bb0-8413-941a5146b9d5",
    "name": "demo-test-container",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "create task",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set('baseUrl', 'http://localhost:8080/tasks')"
            ],
            "type": "text/javascript"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task created', () => {",
              "    pm.expect(pm.response.code).to.be.eq(201)",
              "    pm.collectionVariables.set('taskId', pm.response.text())",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "Create database"
        },
        "url": {
          "raw": "{{baseUrl}}",
          "host": [
            "{{baseUrl}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "update task",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task updated', () => {",
              "    pm.expect(pm.response.code).to.be.eq(200)",
              "    pm.expect(pm.response.text()).to.contains(pm.collectionVariables.get('taskId'))",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "Create Database"
        },
        "url": {
          "raw": "{{baseUrl}}/{{taskId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "{{taskId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "complete task",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task completed', () => {",
              "    pm.expect(pm.response.code).to.be.eq(200)",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/{{taskId}}/complete",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "{{taskId}}",
            "complete"
          ]
        }
      },
      "response": []
    },
    {
      "name": "uncomplete task",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task uncompleted', () => {",
              "    pm.expect(pm.response.code).to.be.eq(200)",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "PATCH",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/{{taskId}}/un-complete",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "{{taskId}}",
            "un-complete"
          ]
        }
      },
      "response": []
    },
    {
      "name": "get task by id",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task exists', () => {",
              "    pm.expect(pm.response.code).to.be.eq(200)",
              "    pm.expect(pm.response.json().status).to.be.eq('PENDING')",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/{{taskId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "{{taskId}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "get all tasks",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if all tasks exists', () => {",
              "    pm.expect(pm.response.code).to.be.eq(200)",
              "    pm.expect(pm.response.json().content).to.be.not.empty",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}?page=1&size=5",
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "size",
              "value": "5"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "delete task",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('test if task deleted', () => {",
              "    pm.expect(pm.response.code).to.be.eq(204)",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/{{taskId}}",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "{{taskId}}"
          ]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": ""
    },
    {
      "key": "taskId",
      "value": ""
    }
  ]
}
